# Generated by Django 5.1.5 on 2025-02-08 08:31

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('national_code', models.CharField(max_length=10, verbose_name='کد ملی')),
                ('birth_date', models.DateField(verbose_name='تاریخ تولد')),
                ('mobile', models.CharField(help_text='این فیلد باید دقیقاً ۱۱ کاراکتر باشد.', max_length=11, unique=True, validators=[django.core.validators.RegexValidator(message='این فیلد باید دقیقاً شامل ۱۱ رقم باشد.', regex='^\\d{11}$')], verbose_name='تلفن همراه')),
                ('is_mobile_verified', models.BooleanField(default=False, verbose_name='تایید موبایل')),
                ('phone', models.CharField(max_length=11, verbose_name='شماره تلفن')),
                ('postal_code', models.CharField(max_length=10, verbose_name='کد پستی')),
                ('use_2fa', models.BooleanField(default=False, verbose_name='مایل به استفاده از رمز دو عاملی هستم')),
                ('avatar', models.ImageField(blank=True, default=None, upload_to='uploads/users/avatar', verbose_name='تصویر پرسنلی')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid کد')),
                ('base', models.BooleanField(default=True, verbose_name='پایه حقیقی / حقوقی')),
                ('has_business_card', models.BooleanField(default=False, verbose_name='بازرگان حقیقی / حقوقی')),
                ('has_internal_trader', models.BooleanField(default=False, verbose_name='تاجر حقیقی / حقوقی')),
                ('active_role', models.CharField(choices=[('br', 'پایه حقیقی / حقوقی'), ('bc', 'بازرگانی حقیقی / حقوقی'), ('it', 'تاجر حقیقی /حقوقی')], default='br', max_length=2, verbose_name='نقش فعال')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربرها',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VerificationCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='uuid کد')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='ایجاد شده در')),
                ('verification_code', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1000), django.core.validators.MaxValueValidator(9999)], verbose_name='کد تایید')),
                ('response_status', models.PositiveSmallIntegerField(verbose_name='وضعیت ارسال')),
                ('response_message', models.TextField(verbose_name='پیام وضعیت ارسال')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'کد تایید',
                'verbose_name_plural': 'کدهای تایید',
                'indexes': [models.Index(fields=['user', 'verification_code'], name='users_verif_user_id_89c4e1_idx')],
            },
        ),
    ]
